{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["IndexPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","allStrapiProject","edges","map","project","key","node","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","title","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","image","childImageSharp","react_markdown__WEBPACK_IMPORTED_MODULE_5___default","className","source","content","transformImageUri","uri","startsWith","process","IMAGE_BASE_URL","escapeHtml","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","children","_856328897","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href"],"mappings":"iOAoCeA,UA9BG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,UACGH,EAAKK,iBAAiBC,MAAMC,IAAI,SAAAC,GAAO,OACtCP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,EAAQE,KAAKC,IACpBV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,IAAML,EAAQE,KAAKC,IAAOH,EAAQE,KAAKI,QAEjDb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAKc,MAAOR,EAAQE,KAAKO,MAAMC,gBAAgBF,QAC/Cf,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACEkB,UAAU,eACVC,OAAQb,EAAQE,KAAKY,QACrBC,kBAAmB,SAAAC,GAAG,OACpBA,EAAIC,WAAW,QACXD,EADJ,GAEOE,GAAYC,eAAiBH,GAEtCI,YAAY,IAEd3B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,IAAML,EAAQE,KAAKC,IAA3B,iBAINV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,YAAT,kBAMG,IAAMgB,EAAS,kCCtCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAAtC,IAAAkC,EAAA,KAAAA,EAAA,GAcyBO,QAAOC,QAELC,IAAMC,cAAc,qKCMhCC,UAjBU,SAAAhD,GAAiC,IAA9BiD,EAA8BjD,EAA9BiD,SAAUC,EAAoBlD,EAApBkD,cACpC,OAAKA,EAGEJ,IAAM1C,cAAc+C,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,8ECHLC,EAAS,SAAAvD,GAAA,IAAGwD,EAAHxD,EAAGwD,UAAH,OACbC,EAAAtD,EAAAC,cAAA,UACEsD,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdH,EAAAtD,EAAAC,cAAA,OACEsD,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTN,EAAAtD,EAAAC,cAAA,MAAIsD,MAAO,CAAEG,OAAQ,IACnBJ,EAAAtD,EAAAC,cAAC4D,EAAA,EAAD,CACElD,GAAG,IACH4C,MAAO,CACLO,MAAK,QACLC,eAAc,SAGfV,OAWXD,EAAOY,aAAe,CACpBX,UAAS,IAGID,sBCWAa,IArCA,SAAApE,GAAkB,IAAfqE,EAAerE,EAAfqE,SACVpE,EAAIqE,EAAArE,KAUV,OACEwD,EAAAtD,EAAAC,cAAAqD,EAAAtD,EAAAoE,SAAA,KACEd,EAAAtD,EAAAC,cAACoE,EAAD,CAAQhB,UAAWvD,EAAKwE,KAAKC,aAAa3D,QAC1C0C,EAAAtD,EAAAC,cAAA,OACEsD,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPY,WAAY,IAGdlB,EAAAtD,EAAAC,cAAA,YAAOiE,GACPZ,EAAAtD,EAAAC,cAAA,oBACK,IAAIwE,MAAOC,cADhB,mBAGEpB,EAAAtD,EAAAC,cAAA,KAAG0E,KAAK,4BAAR","file":"component---src-pages-index-js-7e905b72f650bf790033.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport ReactMarkdown from \"react-markdown\"\nimport Layout from \"../components/layout\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <ul>\n      {data.allStrapiProject.edges.map(project => (\n        <li key={project.node.id}>\n          <h2>\n            <Link to={`/${project.node.id}`}>{project.node.title}</Link>\n          </h2>\n          <Img fixed={project.node.image.childImageSharp.fixed} />\n          <ReactMarkdown\n            className=\"indexArticle\"\n            source={project.node.content}\n            transformImageUri={uri =>\n              uri.startsWith(\"http\")\n                ? uri\n                : `${process.env.IMAGE_BASE_URL}${uri}`\n            }\n            escapeHtml={false}\n          />\n          <Link to={`/${project.node.id}`}>Read more</Link>\n        </li>\n      ))}\n    </ul>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allStrapiProject {\n      edges {\n        node {\n          id\n          title\n          content\n          image {\n            childImageSharp {\n              fixed(width: 200) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport \"../styles/global.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}