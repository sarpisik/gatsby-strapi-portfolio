{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/copyRight.js","webpack:///./src/components/container.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js"],"names":["ProjectTemplate","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","strapiProject","meta","name","content","_components_container__WEBPACK_IMPORTED_MODULE_4__","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","image","childImageSharp","react_markdown__WEBPACK_IMPORTED_MODULE_3___default","className","source","transformImageUri","uri","startsWith","process","escapeHtml","query","m","module","exports","require","default","SEO","description","lang","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","property","author","concat","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","CopyRight","id","Date","getFullYear","href","gatsby__WEBPACK_IMPORTED_MODULE_1__","_copyRight__WEBPACK_IMPORTED_MODULE_2__","frameStyle","height","padding","containerStyle","margin","maxWidth","backgroundColor","borderRadius","Container","children","style","to","$export","toLength","context","$startsWith","P","F","searchString","that","this","index","Math","min","arguments","length","undefined","search","String","call","slice"],"mappings":"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","file":"component---src-templates-project-js-525b5b1352f39b1cde18.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport ReactMarkdown from \"react-markdown\"\nimport Container from \"../components/container\"\nimport SEO from \"../components/seo\"\n\nconst ProjectTemplate = ({ data }) => (\n  <Fragment>\n    <SEO\n      title={data.strapiProject.title}\n      meta={[\n        {\n          name: \"keywords\",\n          content: `web developer portfolio project, web developer full stack project, web developer freelance project, portfolio project, fullstack developer project, ${data.strapiProject.title}`,\n        },\n      ]}\n    />\n    <Container>\n      <h1>{data.strapiProject.title}</h1>\n      <Img fluid={data.strapiProject.image.childImageSharp.fluid} />\n      <br />\n      <ReactMarkdown\n        className=\"indexArticle\"\n        source={data.strapiProject.content}\n        transformImageUri={uri =>\n          uri.startsWith(\"http\") ? uri : `${process.env.IMAGE_BASE_URL}${uri}`\n        }\n        escapeHtml={false}\n      />\n    </Container>\n  </Fragment>\n)\n\nexport default ProjectTemplate\n\nexport const query = graphql`\n  query ProjectTemplate($id: String!) {\n    strapiProject(id: { eq: $id }) {\n      title\n      content\n      image {\n        childImageSharp {\n          fluid(maxWidth: 960) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\n\nconst CopyRight = () => (\n  <footer id=\"footer\" className=\"copyright-sarp\">\n    <ul className=\"copyright\">\n      <li>&copy; {new Date().getFullYear()}, Sarp ISIK</li>\n      <li>\n        Design: <a href=\"http://html5up.net\">HTML5 UP</a>\n      </li>\n    </ul>\n  </footer>\n)\n\nexport default CopyRight\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport CopyRight from \"./copyRight\"\n\nconst frameStyle = {\n    height: \"100%\",\n    padding: \"1rem 0\",\n  },\n  containerStyle = {\n    margin: \"1rem auto\",\n    maxWidth: \"600px\",\n    padding: \"1rem\",\n    // boxShadow: \"0px 0px 3px 3px rgba(73,191,157,0.5)\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"0.35em\",\n  }\n\nconst Container = ({ children }) => (\n  <div className=\"background-dark\" style={frameStyle}>\n    <div style={containerStyle}>\n      <Link to=\"/\" className=\"icon solid fa-long-arrow-alt-left\">\n        &nbsp; Back\n      </Link>\n      <hr />\n      {children}\n      <hr />\n      <CopyRight />\n    </div>\n  </div>\n)\n\nexport default Container\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}